name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  NODE_VERSION: 22
  PYTHON_VERSION: 3.12

jobs:
  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: ./frontend/package.json
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: ./frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./frontend

      - name: Run ESLint
        run: pnpm lint
        working-directory: ./frontend

  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install ruff
        run: pip install ruff
        working-directory: ./backend

      - name: Run ruff linter
        run: ruff check .
        working-directory: ./backend

  test-backend:
    name: Test Backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python: [ "3.10", "3.12" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
        working-directory: ./backend

      - name: Run tests
        run: python -m pytest
        working-directory: ./backend
